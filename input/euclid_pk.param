#------Experiments to test (separated with commas)-----

# valid options are (so far): acbar, bicep, boomerang, cbi,
# hst, quad, sn, spt, fake_planck_bluebook,
# euclid_pk, euclid_lensing
# and clik_fake_planck (for Planck members)

data.experiments=['euclid_pk_ddm_nl']
#data.experiments=['wmap','spt']

#------ Parameter list -------
# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'

#Nuisance parameter list

data.parameters['sigma_NL']      = [ 7,    4,   10,   0,  1, 'nuisance']
data.parameters['beta_0^Euclid'] = [ 1, 0.95, 1.05,   0,  1, 'nuisance']
data.parameters['beta_1^Euclid'] = [ 1, 0.95, 1.05,   0,  1, 'nuisance']


# Cosmological parameters list
data.parameters['omega_b'] 	        = [2.233,  1.8, 3, 0.016, 0.01,'cosmo']
#data.parameters['omega_cdm']       = [0.1197, 0.01,   0.2, 0.0016,1,   'cosmo']

# f_dcdm= 0.01
#data.parameters['omega_cdm'] 	   = [0.118503, 0.01,   0.2, 0.0016,1,   'cosmo']
#data.parameters['omega_ini_dcdm'] = [0.001197, 0.001,   0.4, 0.0016,1,   'cosmo']

# f_dcdm= 0.05
#data.parameters['omega_cdm']      = [0.113715, 0.01,   0.2, 0.0016,1,   'cosmo']
#data.parameters['omega_ini_dcdm'] = [0.005985, 0.001,   0.4, 0.0016,1,   'cosmo']

# f_dcdm= 0.1
#data.parameters['omega_cdm']      = [0.10773, 0.01,   0.2, 0.0016,1,   'cosmo']
#data.parameters['omega_ini_dcdm'] = [0.01197, 0.001,   0.4, 0.0016,1,   'cosmo']

# f_dcdm= 0.13
#data.parameters['omega_cdm']      = [0.104139, 0.01,   0.2, 0.0016,1,   'cosmo']
#data.parameters['omega_ini_dcdm'] = [0.015561, 0.001,   0.4, 0.0016,1,   'cosmo']

# f_dcdm= 1.0
data.parameters['omega_cdm']      = [0.0001, 0.00001,   0.2, 0.0016,1,   'cosmo']
data.parameters['omega_ini_dcdm'] = [0.1197, 0.001,   0.4,   0.0016,1,   'cosmo']


#Log(Gamma/km/s/Mpc) = 0.5
#data.parameters['Gamma_dcdm']  = [3.1623,0,1000,10,1,'cosmo']

#Log(Gamma/km/s/Mpc) = 1.0
#data.parameters['Gamma_dcdm']  = [10.0,0,1000,10,1,'cosmo']

#Log(Gamma/km/s/Mpc) = 1.5
data.parameters['Gamma_dcdm']  = [31.623,0,1000,10,1,'cosmo']

#Log(Gamma/km/s/Mpc) = 1.84
#data.parameters['Gamma_dcdm']  = [69.183,0,1000,10,1,'cosmo']

#Log(Gamma/km/s/Mpc) = 2.0
#data.parameters['Gamma_dcdm']  = [100.0,0,1000,10,1,'cosmo']

#Log(Gamma/km/s/Mpc) = 2.5
#data.parameters['Gamma_dcdm']	= [316.23,0,1000,10,1,'cosmo']

#Log(Gamma/km/s/Mpc) = 3.0
#data.parameters['Gamma_dcdm']  = [1000.0,0,1000,10,1,'cosmo']

data.parameters['n_s']       	= [0.9652,  0.9,1.1, 0.004, 1,   'cosmo']
data.parameters['A_s']       	= [2.09,   1.8,3, 0.038, 1e-9,'cosmo']
data.parameters['h']         	= [0.6737,  0.6,0.8, 0.0065,1,   'cosmo']
data.parameters['tau_reio']    	= [0.0540,  0.004,0.12, 0.0044,1,   'cosmo']

# Derived parameter list
data.parameters['Omega_Lambda'] = [0,       -1, -1, 0,1,  'derived']
data.parameters['z_reio']          = [1, None, None, 0,     1,   'derived']



# Other class parameters (fixed parameters, precision parameters, etc.)
data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'

# The base model features two massless
# and one massive neutrino with m=0.06eV.
# The settings below ensures that Neff=3.046
# and m/omega = 93.14 eV
data.cosmo_arguments['N_ur'] = 2.0328
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06
data.cosmo_arguments['T_ncdm'] = 0.71611


#------ Mcmc parameters ----
# Number of steps taken, by default (overwritten by the -N command)
data.N=10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5
