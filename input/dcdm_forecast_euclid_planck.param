#-----CLASS v2.7.1 (branch: merging_with_master, hash: 574701055bfe720d76082639f7be7066ad6b8d00)-----

#------Experiments to test (separated with commas)-----
data.experiments=['fake_planck_realistic','euclid_pk_ddm_nl','euclid_lensing_ddm_nl']

#------ Settings for the over-sampling.
#data.over_sampling=[1, 10, 10]
#------ Parameter list -------
# Cosmological parameters list

data.parameters['omega_b']	    = [  2.2377,    None, None,	0.015, 0.01, 'cosmo']
data.parameters['omega_cdm']        = [ 0.122676,   None, None,     0.0013,    1, 'cosmo']
#data.parameters['f_dcdm']           = [0.021,      0.00001,0.5,0.01,1,'cosmo']
data.parameters['H0'] 		    = [67.5    ,None,None,      0.5, 1,'cosmo']
data.parameters['ln10^{10}A_s']     = [  3.0447,   None, None,	0.015,    1, 'cosmo']
data.parameters['n_s']              = [  0.9659,   None, None,     0.0042,    1, 'cosmo']
data.parameters['tau_reio']         = [  0.065,  0.004, None,	0.008,    1, 'cosmo']
#data.parameters['Log10_Gamma_dcdm'] = [2.698,-0.9999,5,1,1,'cosmo']

data.parameters['f_dcdm']           = [0.0336,      0.00001,0.5,0.01,1,'cosmo']
data.parameters['Log10_Gamma_dcdm'] = [4.237,-0.9999,5,1,1,'cosmo']

# Nuisance parameter list, same call, except the name does not have to be a class name
data.parameters['sigma_NL'] = [7.0,4.0,10.0,1.5,1,'nuisance']
data.parameters['beta_0^Euclid'] = [1.0,None,None,0.01,1,'nuisance']
data.parameters['beta_1^Euclid'] = [1.0,None,None,0.01,1,'nuisance']


# Derived parameters
data.parameters['z_reio']          = [1, None, None, 0,     1,   'derived']
data.parameters['Omega_Lambda']    = [1, None, None, 0,     1,   'derived']
data.parameters['Omega_m']         = [1, None, None, 0,     1,   'derived']
data.parameters['YHe']             = [1, None, None, 0,     1,   'derived']
data.parameters['100*theta_s']     = [0, None, None, 0,     1,   'derived']
data.parameters['A_s']             = [0, None, None, 0,  1e-9,   'derived']
data.parameters['sigma8']          = [0, None, None, 0,     1,   'derived']
data.parameters['rs_rec']          = [0, None, None, 0,     1,   'derived']
# Other cosmo parameters (fixed parameters, precision parameters, etc.)

data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
data.cosmo_arguments['k_pivot'] = 0.05

# The base model features two massless
# and one massive neutrino with m=0.06eV.
# The settings below ensures that Neff=3.046
# and m/omega = 93.14 eV
data.cosmo_arguments['N_ur'] = 2.0328
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06
data.cosmo_arguments['T_ncdm'] = 0.71611


#data.cosmo_arguments['omega_cdm'] = 0.0000000001
# These two are required to get sigma8 as a derived parameter
# (class must compute the P(k) until sufficient k)
data.cosmo_arguments['output'] = 'mPk'
#data.cosmo_arguments['P_k_max_h/Mpc'] = 1.
# These two are required to get sigma8 as a derived parameter
# (class must compute the P(k) until sufficient k)
#data.cosmo_arguments['non linear'] = 'halofit'
data.cosmo_arguments['z_max_pk'] = 3.


#------ Mcmc parameters ----
data.N=10
data.write_step=5



